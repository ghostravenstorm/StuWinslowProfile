This here is my honest first attempt at making a real-time 2D game. Since this was part of a class project that student had to work on idividually, and I'm certainly not good at visual effects, I wanted to focus mainly on technical implementation with a very simple mechanic and goal in mind. Since I was relatively new the complex features of programming and the Java syntax at the time, I've spent quite a bit of time triyng to teach myself the math involved in trying to get movement working on a 2D cartesian plane. 

I am not the best at learning math so trying to get basic movement is not easy, at least not the way I had wanted. Many of my peers used a simple trick where the X and Y variables for an object's position are being modified by 1's or just referencing the mouse cursor. Movement here is done by storing the mouse cursor and the position of the player as PVector() objects. With these objects I can apply more complex math to them, which I did in order to obtain movement where the player is always moveing towards the cursor instead of one static direct upon key press. The same movement logic is also applied to projectiles.

My other challenge in this project was also trying to code collision detection correctly. The large white circles are designed to be natural obstacles that block projectiles and the player from passing through. This certainly was a difficult challege to over come. I eventually solved it with a simple boolean check within the circle class that checks if another object is in its personal space by taking the size of the circle and its position and calculating it against the size and position of a projectile. At this point shooting things and destroying them worked, hoever I still has issues with applying physics to the player when they hit a white circle. I solved it with a simple check that takes the white circles specifically into account and if true then remove user control for half a second and push them back in the opposite direction. My method of "foe"llision works but it still has bugs with the check not resetting quick enough and the player's forward movement is reversed until the leave the circle's parameter.

This was made in Processing. For more info about Processing check out `Processing.org`.